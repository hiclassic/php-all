‚úÖ üîç 1Ô∏è‚É£ User.php ‚Äî Line by Line
php
Copy code
<?php
‚û°Ô∏è PHP ‡¶∂‡ßÅ‡¶∞‡ßÅ‡•§ ‡¶∏‡¶¨ ‡¶ï‡ßã‡¶° PHP mode ‡¶è ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§

php
Copy code
class User {
‚û°Ô∏è User ‡¶®‡¶æ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø parent/base class‡•§
‚û°Ô∏è ‡¶è‡¶ü‡¶æ‡¶ï‡ßá Inheritance ‡¶è parent class ‡¶¨‡¶≤‡¶æ ‡¶π‡ßü‡•§

php
Copy code
    protected $id;
    protected $name;
    protected $email;
‚û°Ô∏è ‡ß©‡¶ü‡¶ø property: id, name, email‡•§
‚û°Ô∏è protected ‡¶Æ‡¶æ‡¶®‡ßá child class (Student) ‡¶è‡¶ó‡ßÅ‡¶≤‡ßã access ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§

php
Copy code
    public function __construct($id, $name, $email) {
‚û°Ô∏è Constructor method ‚Äî ‡¶Ø‡¶ñ‡¶® new object ‡¶¨‡¶æ‡¶®‡¶æ‡¶¨‡ßá ‡¶§‡¶ñ‡¶® ‡¶á‡¶π‡¶æ auto run ‡¶π‡¶¨‡ßá‡•§
‚û°Ô∏è $id, $name, $email ‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶Æ‡¶ø‡¶ü‡¶æ‡¶∞ ‡¶®‡ßá‡¶¨‡ßá‡•§

php
Copy code
        $this->setId($id);
        $this->setName($name);
        $this->setEmail($email);
‚û°Ô∏è Constructor ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞ setter method call ‡¶ï‡¶∞‡¶õ‡ßá‡•§
‚û°Ô∏è ‡¶Æ‡¶æ‡¶®‡¶ó‡ßÅ‡¶≤‡ßã setter function ‡¶¶‡¶ø‡ßü‡ßá validate ‡¶π‡¶¨‡ßá‡•§

php
Copy code
    protected function setId($id) {
‚û°Ô∏è setId method ‚Äî protected, child class ‡¶ì ‡¶™‡¶æ‡¶¨‡ßá‡•§
‚û°Ô∏è ID clean + validate ‡¶ï‡¶∞‡¶¨‡ßá‡•§

php
Copy code
        $id = trim($id);
‚û°Ô∏è ID ‡¶è‡¶∞ ‡¶Ö‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü white space ‡¶ï‡ßá‡¶ü‡ßá ‡¶´‡ßá‡¶≤‡¶¨‡ßá‡•§

php
Copy code
        if (strlen($id) > 5) {
            throw new Exception("‚ùå ID must be max 5 characters.");
        }
‚û°Ô∏è ID ‡¶è‡¶∞ length ‡ß´ ‡¶è‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶π‡¶≤‡ßá Exception throw ‡¶ï‡¶∞‡¶¨‡ßá ‚Äî ‡¶Æ‡¶æ‡¶®‡ßá error‡•§

php
Copy code
        $this->id = $id;
    }
‚û°Ô∏è Valid ‡¶π‡¶≤‡ßá property ‡¶§‡ßá ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá‡•§

php
Copy code
    protected function setName($name) {
        $this->name = htmlspecialchars(trim($name));
    }
‚û°Ô∏è Name trim ‡¶ï‡¶∞‡¶¨‡ßá + htmlspecialchars() ‡¶¶‡¶ø‡¶¨‡ßá ‚Äî XSS ‡¶∞‡ßã‡¶ß ‡¶ï‡¶∞‡¶§‡ßá‡•§

php
Copy code
    protected function setEmail($email) {
        $email = trim($email);
‚û°Ô∏è Email ‡¶ì trim ‡¶ï‡¶∞‡¶¨‡ßá‡•§

php
Copy code
        if (!preg_match("/^[\w\-\.]+@[\w\-]+\.[a-z]{2,}$/i", $email)) {
            throw new Exception("‚ùå Invalid email format.");
        }
‚û°Ô∏è Regex ‡¶¶‡¶ø‡ßü‡ßá email pattern match ‡¶ï‡¶∞‡¶¨‡ßá‡•§ ‡¶®‡¶æ ‡¶Æ‡¶ø‡¶≤‡¶≤‡ßá Exception‡•§

php
Copy code
        $this->email = htmlspecialchars($email);
    }
}
?>
‚û°Ô∏è Valid ‡¶π‡¶≤‡ßá save ‡¶ï‡¶∞‡¶¨‡ßá + class close‡•§

‚úÖ üîç 2Ô∏è‚É£ Student.php ‚Äî Line by Line
php
Copy code
<?php
require_once 'User.php';
‚û°Ô∏è User.php load ‡¶ï‡¶∞‡¶õ‡ßá ‚Äî Inheritance ‡¶ö‡¶æ‡¶≤‡¶æ‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

php
Copy code
class Student extends User {
‚û°Ô∏è Student ‡¶π‡¶≤‡ßã child class, User ‡¶•‡ßá‡¶ï‡ßá inherit ‡¶ï‡¶∞‡¶õ‡ßá‡•§

php
Copy code
    private $photo;
‚û°Ô∏è Student ‡¶è‡¶∞ ‡¶®‡¶§‡ßÅ‡¶® property ‚Äî profile photo‡•§

php
Copy code
    public function __construct($id, $name, $email, $photo) {
        parent::__construct($id, $name, $email);
‚û°Ô∏è Constructor ‡ß™‡¶ü‡¶ø input ‡¶®‡ßá‡ßü ‚Äî parent ‡¶è‡¶∞ ‡ß©‡¶ü‡¶æ + photo‡•§
‚û°Ô∏è parent::__construct ‡¶Æ‡¶æ‡¶®‡ßá User class ‡¶è‡¶∞ constructor ‡¶ö‡¶æ‡¶≤‡¶æ‡¶¨‡ßá‡•§

php
Copy code
        $this->setPhoto($photo);
    }
‚û°Ô∏è ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ photo setter call ‡¶ï‡¶∞‡¶õ‡ßá‡•§

php
Copy code
    private function setPhoto($photo) {
‚û°Ô∏è Image upload validate/save ‡¶è‡¶∞ logic‡•§

php
Copy code
        if ($photo['error'] === UPLOAD_ERR_OK) {
‚û°Ô∏è ‡¶Ø‡¶¶‡¶ø ‡¶´‡¶æ‡¶á‡¶≤ OK ‡¶•‡¶æ‡¶ï‡ßá‡•§

php
Copy code
            $tmp = $photo['tmp_name'];
            $name = $photo['name'];
            $size = $photo['size'];
‚û°Ô∏è Temp location, filename, size ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶õ‡ßá‡•§

php
Copy code
            $ext = strtolower(pathinfo($name, PATHINFO_EXTENSION));
‚û°Ô∏è File extension ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶õ‡ßá‡•§

php
Copy code
            $allowed = ['jpg', 'jpeg', 'png', 'gif'];
‚û°Ô∏è Allowed extensions list‡•§

php
Copy code
            if (!in_array($ext, $allowed)) {
                throw new Exception("‚ùå Only JPG, PNG, GIF allowed.");
            }
‚û°Ô∏è ‡¶Ø‡¶¶‡¶ø extension invalid ‚Üí Exception‡•§

php
Copy code
            if ($size > 1024 * 1024) {
                throw new Exception("‚ùå Image too large (max 1MB).");
            }
‚û°Ô∏è ‡¶Ø‡¶¶‡¶ø file size 1MB ‡¶è‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶π‡ßü ‚Üí Exception‡•§

php
Copy code
            $newName = uniqid('img_', true) . '.' . $ext;
            $uploadPath = 'uploads/' . $newName;
‚û°Ô∏è Unique filename ‡¶¨‡¶æ‡¶®‡¶æ‡ßü ‚Üí old name overwrite ‡¶π‡¶¨‡ßá ‡¶®‡¶æ‡•§

php
Copy code
            if (!move_uploaded_file($tmp, $uploadPath)) {
                throw new Exception("‚ùå Failed to upload photo.");
            }
‚û°Ô∏è Temporary file ‡¶ï‡ßá uploads/ ‡¶è move ‡¶ï‡¶∞‡¶¨‡ßá‡•§ ‡¶®‡¶æ ‡¶™‡¶æ‡¶∞‡¶≤‡ßá Exception‡•§

php
Copy code
            $this->photo = $newName;
‚û°Ô∏è Valid ‡¶π‡¶≤‡ßá filename save ‡¶ï‡¶∞‡¶¨‡ßá‡•§

php
Copy code
        } else {
            throw new Exception("‚ùå Photo required.");
        }
    }
‚û°Ô∏è ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã file ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá ‚Üí Exception‡•§

php
Copy code
    public function save($filename) {
        $line = "{$this->id},{$this->name},{$this->email},{$this->photo}\n";
        file_put_contents($filename, $line, FILE_APPEND);
    }
‚û°Ô∏è Save method ‚Äî .txt ‡¶§‡ßá id,name,email,photo newline ‡¶è write ‡¶ï‡¶∞‡¶¨‡ßá‡•§

php
Copy code
    public static function display($filename) {
‚û°Ô∏è Static display method ‚Äî ‡¶∏‡¶¨ student ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§

php
Copy code
        if (!file_exists($filename)) {
            echo "<p>No students yet.</p>";
            return;
        }
‚û°Ô∏è ‡¶´‡¶æ‡¶á‡¶≤ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá message‡•§

php
Copy code
        $lines = file($filename, FILE_IGNORE_NEW_LINES);
‚û°Ô∏è ‡¶´‡¶æ‡¶á‡¶≤ ‡¶ï‡ßá line by line array ‡¶§‡ßá ‡¶Ü‡¶®‡¶¨‡ßá‡•§

php
Copy code
        echo "<h3>üìã Registered Students:</h3>";
        echo "<table border='1' cellpadding='8' cellspacing='0'>";
        echo "<tr><th>ID</th><th>Name</th><th>Email</th><th>Photo</th></tr>";
‚û°Ô∏è Table head ‡¶§‡ßà‡¶∞‡¶ø‡•§

php
Copy code
        foreach ($lines as $line) {
            list($id, $name, $email, $photo) = explode(",", $line);
‚û°Ô∏è ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø line ‡¶ï‡ßá split ‡¶ï‡¶∞‡¶¨‡ßá‡•§

php
Copy code
            echo "<tr>
                <td>" . htmlspecialchars($id) . "</td>
                <td>" . htmlspecialchars($name) . "</td>
                <td>" . htmlspecialchars($email) . "</td>
                <td><img src='uploads/" . htmlspecialchars($photo) . "' width='80'></td>
            </tr>";
‚û°Ô∏è ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø student ‡¶è‡¶∞ row show ‡¶ï‡¶∞‡¶¨‡ßá, photo ‡¶ì ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§

php
Copy code
        }
        echo "</table>";
    }
}
?>
‚û°Ô∏è Loop ‡¶∂‡ßá‡¶∑ ‚Üí table ‡¶∂‡ßá‡¶∑ ‚Üí class ‡¶∂‡ßá‡¶∑‡•§

‚úÖ üîç 3Ô∏è‚É£ index.php ‚Äî Line by Line
php
Copy code
<?php
require_once 'classes/Student.php';
‚û°Ô∏è Student class load ‡¶ï‡¶∞‡¶õ‡ßá‡•§

php
Copy code
$message = '';
‚û°Ô∏è Message var init.

php
Copy code
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
‚û°Ô∏è Form submit ‡¶π‡¶≤‡ßá‡•§

php
Copy code
    try {
        $student = new Student(
            $_POST['id'] ?? '',
            $_POST['name'] ?? '',
            $_POST['email'] ?? '',
            $_FILES['photo'] ?? []
        );
‚û°Ô∏è New Student object ‡¶¨‡¶æ‡¶®‡¶æ‡¶¨‡ßá‡•§

php
Copy code
        $student->save('data.txt');
        $message = "‚úÖ Registered successfully!";
    } catch (Exception $e) {
        $message = $e->getMessage();
    }
}
‚û°Ô∏è Save ‡¶ï‡¶∞‡¶¨‡ßá‡•§ error ‡¶π‡¶≤‡ßá catch ‡¶ï‡¶∞‡ßá message‡•§

html
Copy code
<!DOCTYPE html>
<html>
<head>
    <title>Student Registration</title>
‚û°Ô∏è HTML ‡¶∂‡ßÅ‡¶∞‡ßÅ‡•§

html
Copy code
    <style> ... </style>
‚û°Ô∏è Basic style‡•§

html
Copy code
<div class="box">
    <h2>üìÑ Student Registration</h2>
‚û°Ô∏è Title‡•§

php
Copy code
    <?php if ($message) echo "<div class='msg'>" . htmlspecialchars($message) . "</div>"; ?>
‚û°Ô∏è Message show‡•§

html
Copy code
    <form method="POST" enctype="multipart/form-data">
        <input type="text" name="id" placeholder="Student ID (max 5 chars)" required>
        <input type="text" name="name" placeholder="Name" required>
        <input type="email" name="email" placeholder="Email" required>
        <input type="file" name="photo" required>
        <button type="submit">Register</button>
    </form>
‚û°Ô∏è Form: id, name, email, photo‡•§

php
Copy code
    <?php Student::display('data.txt'); ?>
</div>
</body>
</html>
‚û°Ô∏è ‡¶∏‡¶¨ student ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§

‚úÖ‚úÖ‚úÖ üîë Bottomline
‡¶ß‡¶æ‡¶™	‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ
User	Base class ‚Äî id, name, email
Student	User ‡¶•‡ßá‡¶ï‡ßá extend ‚Äî file upload extra
parent::__construct	parent init
Exception	Validation fail ‡¶ï‡¶∞‡¶≤‡ßá
uniqid	Unique filename
move_uploaded_file	Temp ‚Üí uploads
file_put_contents	Save
display	table format show